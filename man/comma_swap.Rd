% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comma_swap.R
\name{comma_swap}
\alias{comma_swap}
\title{Remove comma and swap words.}
\usage{
comma_swap(x, trim = T, na.rm = T)
}
\arguments{
\item{x}{character vector.}

\item{trim}{logical, if set to TRUE all leading and trailing whitespaces are
removed \emph{after} the swap.}

\item{na.rm}{logical, if set to TRUE any NA element in 'x' will give a corresponding
NA element in the output. Otherwise, an error will be thrown and computation will stop.}
}
\value{
A character vector of the same length as \code{x}.
}
\description{
A short description...
}
\details{
Input strings are assumed to have a single comma ',' dividing the sentence.
That is common in databases of places, like e.g. "Rosario, El" (a municipal term
on the Canary Islands). In this example, we would like it to be written as
"El Rosario", with the article "El" preceding the name "Rosario".

This function will do the swap only for the first comma. If there are no commas,
the output string will be exactly the input string. Also, any extra comma
will be considered as text. E.g. "Madrid, Spain, Europe" would be
converted into "Spain, Europe Madrid".
}
\examples{
x <- c(",", " ,", ", ", " , ", "Rosario, El", "Madrid capital", "Madrid, Spain, Europe")
print(rbind(x, comma_swap(x)))

# Notice the difference.
print(rbind(x, comma_swap(x, F)))
}
